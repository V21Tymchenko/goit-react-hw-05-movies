{"version":3,"file":"static/js/958.d69f3f2e.chunk.js","mappings":"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","sources":["helpers/filmApi.js","webpack://react-homework-template/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","webpack://react-homework-template/./src/components/ScrollUp/ScrollUp.module.css?8dd1","components/ScrollUp/ScrollUp.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY_API = '3c137c4d293c8ccacc79a0998fff8ad4';\n\nexport const getFilmFromApi = async (url = '') => {\n  const { data } = await axios.get(url);\n  return data;\n};\n\n// список страниці Home\nexport function moviesTrending() {\n  return getFilmFromApi(`${BASE_URL}/trending/movie/day?api_key=${KEY_API}`);\n}\n// список с Home с детальной информацией\nexport function movieInfo(movieId) {\n  return getFilmFromApi(`${BASE_URL}/movie/${movieId}?api_key=${KEY_API}`);\n}\n// список cast\nexport function movieCast(movieId) {\n  return getFilmFromApi(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY_API}&language=en-US`\n  );\n}\n// список reviews\nexport function movieReviews(movieId) {\n  return getFilmFromApi(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY_API}&language=en-US&page=1`\n  );\n}\n// поиск по инпуту\nexport function moviesSearch(searchName, page) {\n  return getFilmFromApi(\n    `${BASE_URL}/search/movie?api_key=${KEY_API}&page=${page}&query=${searchName}&language=en-US&include_adult=false`\n  );\n}\n// `3/search/movie?api_key=${myKey}&language=en-US&page=1&include_adult=false&query=${search}`;\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchInput\":\"MoviesPage_SearchInput__eEJjY\",\"SearchForm\":\"MoviesPage_SearchForm__jW9w8\",\"SearchSection\":\"MoviesPage_SearchSection__0VA1e\",\"SearchList\":\"MoviesPage_SearchList__pTs6k\",\"SearchButton\":\"MoviesPage_SearchButton__ooAlA\",\"SearchItem\":\"MoviesPage_SearchItem__97++7\",\"SearchText\":\"MoviesPage_SearchText__fl9Xc\",\"SearchHoverText\":\"MoviesPage_SearchHoverText__qq9T-\",\"searchIcon\":\"MoviesPage_searchIcon__mi7UF\",\"LoadMore\":\"MoviesPage_LoadMore__7BOYB\",\"buttonShadow\":\"MoviesPage_buttonShadow__TF5v3\",\"buttonEdge\":\"MoviesPage_buttonEdge__94FLF\",\"buttonFront\":\"MoviesPage_buttonFront__QlNWG\",\"loading\":\"MoviesPage_loading__+eW3h\"};","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"ScrollUp_Button__yo4Ah\"};","import React, { useEffect, useState } from 'react';\nimport { FaArrowCircleUp } from 'react-icons/fa';\nimport s from './ScrollUp.module.css';\n\nexport const ScrollButton = () => {\n  const [visible, setVisible] = useState(false);\n\n  const toggleVisible = () => {\n    const scrolled = document.documentElement.scrollTop;\n    if (scrolled > 300) {\n      setVisible(true);\n    } else if (scrolled <= 300) {\n      setVisible(false);\n    }\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n  useEffect(() => {\n    window.addEventListener('scroll', toggleVisible);\n    return () => {\n      window.removeEventListener('scroll', toggleVisible);\n    };\n  });\n\n  return (\n    <div className={s.Button}>\n      <FaArrowCircleUp\n        onClick={scrollToTop}\n        style={{ display: visible ? 'inline' : 'none' }}\n      />\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { NavLink, useSearchParams, useLocation } from 'react-router-dom';\nimport { moviesSearch } from 'helpers/filmApi';\nimport defaultImg from 'defaultImg/dafaultImg.jpg';\nimport { BsSearch } from 'react-icons/bs';\nimport toast, { Toaster } from 'react-hot-toast';\nimport s from './MoviesPage.module.css';\nimport { Box } from 'theme/box';\nimport { ScrollButton } from 'components/ScrollUp/ScrollUp';\nimport { Audio } from 'react-loader-spinner';\n\nfunction MiviesPage() {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [page, setPage] = useState(1);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const search = searchParams.get('search') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    sidebarSearch(search, page);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  useEffect(() => {\n    sidebarSearch(search, page);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search, page]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  function sidebarSearch(search, page) {\n    if (!search) return;\n\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const movies = await moviesSearch(search, page);\n\n        if (movies.results.length < 1) {\n          return toast.error('We dont have any movies with name ' + search);\n        }\n        setSearchMovies([...searchMovies, ...movies.results]);\n      } catch (error) {\n        if (error.response.status === 422) {\n          return toast.error('We dont have any movies with name ' + search);\n        }\n        console.log('error :>> ', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { value } = e.target.elements.query;\n    setSearchParams({ search: value });\n    setPage(1);\n    setSearchMovies([]);\n\n    e.target.reset();\n  };\n\n  const handleButtonLoadMore = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  const loadMore = searchMovies.length >= 20 && searchMovies.length <= 70;\n\n  return (\n    <section className={s.SearchSection}>\n      <Box maxWidth=\"1200px\" m=\"0 auto\">\n        <form onSubmit={handleSubmit} className={s.SearchForm}>\n          <input\n            type=\"text\"\n            name=\"query\"\n            value={query}\n            placeholder=\"movie search\"\n            className={s.SearchInput}\n            onChange={e => setQuery(e.target.value)}\n          />\n          <button className={s.SearchButton} type=\"submit\">\n            <BsSearch className={s.searchIcon} />\n          </button>\n        </form>\n        {loading && (\n          <div className={s.loading}>\n            <Audio\n              height=\"80\"\n              width=\"80\"\n              radius=\"9\"\n              color=\"red\"\n              ariaLabel=\"loading\"\n              wrapperStyle\n            />\n          </div>\n        )}\n\n        {searchMovies && (\n          <ul className={s.SearchList}>\n            {searchMovies.map(movie => (\n              <li className={s.SearchItem} key={movie.id}>\n                <NavLink to={`${movie.id}`} state={{ from: location }}>\n                  <img\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                        : defaultImg\n                    }\n                    alt={movie.title}\n                  />\n                </NavLink>\n                <div className={s.SearchHoverText}>\n                  <p className={s.SearchText}>{movie.original_title}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        )}\n        {loadMore && (\n          <button className={s.LoadMore} onClick={handleButtonLoadMore}>\n            <span className={s.buttonShadow}></span>\n            <span className={s.buttonEdge}></span>\n            <span className={s.buttonFront}>Load more</span>\n          </button>\n        )}\n        <Toaster />\n      </Box>\n      <ScrollButton />\n    </section>\n  );\n}\nexport default MiviesPage;\n"],"names":["BASE_URL","KEY_API","getFilmFromApi","url","axios","data","moviesTrending","movieInfo","movieId","movieCast","movieReviews","moviesSearch","searchName","page","ScrollButton","useState","visible","setVisible","toggleVisible","scrolled","document","documentElement","scrollTop","useEffect","window","addEventListener","removeEventListener","className","s","onClick","scrollTo","top","behavior","style","display","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","setPage","query","setQuery","loading","setLoading","search","get","location","useLocation","sidebarSearch","fetchMovies","movies","results","length","toast","response","status","console","log","loadMore","maxWidth","m","onSubmit","e","preventDefault","value","target","elements","reset","type","name","placeholder","onChange","height","width","radius","color","ariaLabel","wrapperStyle","map","movie","to","id","state","from","src","poster_path","defaultImg","alt","title","original_title","prevPage"],"sourceRoot":""}